import time
import platform

if platform.system() == "Windows":
	        import msvcrt
	        def getch():
		        return msvcrt.getch()
else:
	        import tty, termios, sys
	        def getch():
		        fd = sys.stdin.fileno()
		        old_settings = termios.tcgetattr(fd)
		        try:
			        tty.setraw(sys.stdin.fileno())
			        ch = sys.stdin.read(1)
		        finally:
			        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
		        return ch
try:
    with open('sentences.TXT', 'r') as myfile:
        pass
        cnt = 1
        for line in myfile:
            word_count = len(line.split())
            print("Line {}: {}".format(cnt, line.strip()), sep='')
            cnt += 1
            k = 0
            z = line.strip()
            t0 = time.time()
            while True:
                if platform.system() == "Windows":
                    c = getch().decode()
                    print(c, type(c), z[k], type(z[k]), c == z[k])
                    if c == z[k]:
                        print(c)

                        k += 1
                        if k == len(z):
                            break
                else:
                    c = getch()
                    print(c, type(c), z[k], type(z[k]), c == z[k])
                    if c == z[k]:
                        print(c)

                        k += 1
                        if k == len(z):
                            break

            t1 = time.time()
            # accuracy = len(set(k.split()) & set(line.split()))
            # accuracy = (accuracy / word_count) * 100
            timeTaken = t1 - t0
            wordPM = (word_count / timeTaken)
            print('   ' + 'speed: ' + '{:.1f}'.format(wordPM)) #,'Accuracy: ' + '{:.1f}'.format(accuracy) + '%', sep=' , ')
            print('Enter "m" if you want to move to the next sentence:  ')
            while True:
                    try:
                        character = msvcrt.getch()
                        if character.is_pressed('m'):
                                break
                        else:
                                pass
                    except:
                        break
    myfile.close()

except IOError as e:
    print("File doesn't exist!!")
